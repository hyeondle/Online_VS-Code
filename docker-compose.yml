version: '3'

volumes:
  postgres_data:
  frontend_data:
  backend_data:
  code_server_data:

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    networks:
      - app-network
    environment:
      - ENTRY_KEY=test

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - webdb
    networks:
      - app-network
    volumes:
      - ./backend:/app
    environment:
      DJANGO_DB_NAME: vscode_db
      DJANGO_DB_USER: user
      DJANGO_DB_PASSWORD: password
      DJANGO_DB_HOST: webdb
      DJANGO_DB_PORT: 5432
      WORKSPACE_BASE_DIR: /workspaces  # 사용자 디렉토리를 생성할 경로 설정

  webdb:
    container_name: webdb
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vscode_db
    networks:
      - app-network

  code-server:
    container_name: code-server
    build: ./code_server  # code-server 디렉토리에서 빌드
    restart: always
    ports:
      - "8081:8081"  # 8081 포트를 사용하도록 변경
      - "5000:5000"  # Flask API 포트
    volumes:
      - ./workspaces:/home/coder/project
    environment:
      PASSWORD: "password"  # code-server 접속 비밀번호
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
