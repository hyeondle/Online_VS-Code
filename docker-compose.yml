version: '3'

volumes:
  postgres_data:
  frontend_data:
  backend_data:
  code_server_data:

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    networks:
      - app-network
    env_file:
      - .env

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - webdb
    networks:
      - app-network
    volumes:
      - ./backend:/app
    environment:
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}
      ENTRY_KEY: ${ENTRY_KEY}
      WORKSPACE_BASE_DIR: ${WORKSPACE_BASE_DIR}
    env_file:
      - .env

  webdb:
    container_name: webdb
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    env_file:
      - .env

  code-server:
    container_name: code-server
    build: ./code_server
    restart: always
    ports:
      - "8081:8081"
      - "5000:5000"
    volumes:
      - ./workspaces:/home/coder/project
    environment:
      PASSWORD: ${PASSWORD}
    networks:
      - app-network
    env_file:
      - .env

networks:
  app-network:
    driver: bridge
